[gd_scene load_steps=23 format=2]

[ext_resource path="res://scripts/draft/DraftScene.gd" type="Script" id=1]
[ext_resource path="res://addons/nodepath_tracker/NodePathTracker.gd" type="Script" id=2]
[ext_resource path="res://scenes/draft/OptionsView.tscn" type="PackedScene" id=3]
[ext_resource path="res://scenes/draft/ChoiceView.tscn" type="PackedScene" id=4]
[ext_resource path="res://scenes/draft/ResultsView.tscn" type="PackedScene" id=5]
[ext_resource path="res://assets/ui/WormHoleEffect.material" type="Material" id=8]
[ext_resource path="res://scripts/draft/WormHoleEffect.gd" type="Script" id=9]
[ext_resource path="res://assets/smash_theme/fira-sans-font/FiraSans-ExtraBoldItalic.ttf" type="DynamicFontData" id=10]

[sub_resource type="Animation" id=1]
resource_name = "default"
length = 0.4
tracks/0/type = "value"
tracks/0/path = NodePath(".:material:shader_param/texture_alpha")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:time_multiplier")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:material:shader_param/worm_hole_origin")
tracks/2/interp = 2
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0.5, 1.2 ) ]
}

[sub_resource type="Animation" id=2]
resource_name = "intro"
length = 4.1
tracks/0/type = "value"
tracks/0/path = NodePath(".:time_multiplier")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 1.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:material:shader_param/worm_hole_origin")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 0.5, 1.2 ), Vector2( 0.5, 0.5 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:material:shader_param/cloud_color")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 1 ), Color( 0.137255, 0.137255, 0.137255, 1 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:material:shader_param/base_color")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 0.831373, 0.831373, 1 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath(".:material:shader_param/fog_color")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0.984314, 0.14902, 0.0156863, 1 ), Color( 1, 0.34902, 0.34902, 1 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("../IntroLabels:modulate")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("../IntroLabels/LabelCounting:rect_position")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0.2, 0.4, 0.9, 1.1, 1.2, 1.4, 1.9, 2.1, 2.2, 2.4, 2.9, 3.1 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 400.512, 80.8866 ), Vector2( 358.511, 80.8866 ), Vector2( 358.511, 80.8866 ), Vector2( 312.511, 80.8866 ), Vector2( 400.512, 80.8866 ), Vector2( 358.511, 80.8866 ), Vector2( 358.511, 80.8866 ), Vector2( 312.511, 80.8866 ), Vector2( 400.512, 80.8866 ), Vector2( 358.511, 80.8866 ), Vector2( 358.511, 80.8866 ), Vector2( 312.511, 80.8866 ) ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("../IntroLabels/LabelCounting:modulate")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0.2, 0.4, 0.9, 1.1, 1.2, 1.4, 1.9, 2.1, 2.2, 2.4, 2.9, 3.1 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/8/type = "value"
tracks/8/path = NodePath("../IntroLabels/LabelCounting:text")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0.2, 1.2, 2.2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ "3", "2", "1" ]
}
tracks/9/type = "value"
tracks/9/path = NodePath("../IntroLabels/RankedDraftInLabel:modulate")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/keys = {
"times": PoolRealArray( 0, 2.9, 3.1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/10/type = "value"
tracks/10/path = NodePath("../IntroLabels/LabelGo:modulate")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/keys = {
"times": PoolRealArray( 0, 3.2, 3.4, 3.401, 3.8, 4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/11/type = "method"
tracks/11/path = NodePath("../..")
tracks/11/interp = 1
tracks/11/loop_wrap = true
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/keys = {
"times": PoolRealArray( 4.1 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "_intro_finished"
} ]
}
tracks/12/type = "value"
tracks/12/path = NodePath("../Gradient:modulate")
tracks/12/interp = 1
tracks/12/loop_wrap = true
tracks/12/imported = false
tracks/12/enabled = true
tracks/12/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0.733333 ), Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="Animation" id=3]
length = 0.4
tracks/0/type = "value"
tracks/0/path = NodePath(".:time_multiplier")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 1.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:material:shader_param/cloud_color")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0.137255, 0.137255, 0.137255, 1 ), Color( 0.176471, 0.176471, 0.176471, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:material:shader_param/base_color")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 0.831373, 0.831373, 1 ), Color( 1, 0.760784, 0.760784, 1 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:material:shader_param/fog_color")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 0.34902, 0.34902, 1 ) ]
}

[sub_resource type="Animation" id=4]
length = 0.4
tracks/0/type = "value"
tracks/0/path = NodePath(".:time_multiplier")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 3.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:material:shader_param/cloud_color")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0.176471, 0.176471, 0.176471, 1 ), Color( 0.239216, 0.239216, 0.239216, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:material:shader_param/base_color")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 0.760784, 0.760784, 1 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:material:shader_param/fog_color")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 0.34902, 0.34902, 1 ), Color( 1, 0.235294, 0.235294, 1 ) ]
}

[sub_resource type="Animation" id=5]
length = 0.4
tracks/0/type = "value"
tracks/0/path = NodePath(".:time_multiplier")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 3.0, 6.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:material:shader_param/cloud_color")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0.239216, 0.239216, 0.239216, 1 ), Color( 0.32549, 0.32549, 0.32549, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:material:shader_param/base_color")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 0.760784, 0.760784, 1 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:material:shader_param/fog_color")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 0.235294, 0.235294, 1 ) ]
}

[sub_resource type="Animation" id=6]
resource_name = "results"
length = 3.0
tracks/0/type = "value"
tracks/0/path = NodePath("../ResultsBackground:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 2, 3 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 0, 0, 0, 1 ) ]
}
tracks/1/type = "method"
tracks/1/path = NodePath(".")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [ 2.0, 0.1 ],
"method": "start_shake"
} ]
}
tracks/2/type = "method"
tracks/2/path = NodePath("../..")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 2.4 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "_results_animation_finished"
} ]
}

[sub_resource type="Gradient" id=7]
colors = PoolColorArray( 0, 0, 0, 1, 0.933594, 0.0765839, 0.0765839, 1 )

[sub_resource type="GradientTexture" id=8]
gradient = SubResource( 7 )

[sub_resource type="DynamicFont" id=9]
size = 40
outline_size = 3
outline_color = Color( 0, 0, 0, 1 )
use_filter = true
font_data = ExtResource( 10 )

[sub_resource type="DynamicFontData" id=10]
font_path = "res://assets/smash_theme/fira-sans-font/FiraSans-ExtraBoldItalic.ttf"

[sub_resource type="DynamicFont" id=11]
size = 64
outline_size = 4
outline_color = Color( 0, 0, 0, 1 )
use_filter = true
font_data = SubResource( 10 )

[sub_resource type="Shader" id=12]
code = "// Based on https://www.shadertoy.com/view/4ttGWM

shader_type canvas_item;

uniform float height_multiplier;

float rand(vec2 n) {
	return fract(sin(cos(dot(n, vec2(12.9898,12.1414)))) * 83758.5453);
}

float noise(vec2 n) {
	const vec2 d = vec2(0.0, 1.0);
	vec2 b = floor(n), f = smoothstep(vec2(0.0), vec2(1.0), fract(n));
	return mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);
}

float fbm(vec2 n) {
	float total = 0.0, amplitude = 1.0;
	for (int i = 0; i <5; i++) {
		total += noise(n) * amplitude;
		n += n*1.7;
		amplitude *= 0.47;
	}
	return total;
}

void render( out vec4 fragColor, in vec2 screen_pixel_size, in vec2 fragCoord, float time ) {

    const vec3 c1 = vec3(0.5, 0.0, 0.1);
    const vec3 c2 = vec3(0.9, 0.1, 0.0);
    const vec3 c3 = vec3(0.2, 0.1, 0.7);
    const vec3 c4 = vec3(1.0, 0.9, 0.1);
    const vec3 c5 = vec3(0.1);
    const vec3 c6 = vec3(0.9);

    vec2 speed = vec2(0.1, 0.9);
    float shift = 1.327+sin(time*2.0)/2.4;
    float alpha = 1.0;
    
	float dist = 3.5-sin(time*0.4)/1.89;
    
	vec2 iResolution = 1.0 / screen_pixel_size;
    vec2 uv = fragCoord.xy / iResolution.xy;
    vec2 p = fragCoord.xy * dist / iResolution.xx;
    p += sin(p.yx*4.0+vec2(.2,-.3)*time)*0.04;
    p += sin(p.yx*8.0+vec2(.6,+.1)*time)*0.01;
    
    p.x -= time/1.1;
    float q = fbm(p - time * 0.3+1.0*sin(time+0.5)/2.0);
    float qb = fbm(p - time * 0.4+0.1*cos(time)/2.0);
    float q2 = fbm(p - time * 0.44 - 5.0*cos(time)/2.0) - 6.0;
    float q3 = fbm(p - time * 0.9 - 10.0*cos(time)/15.0)-4.0;
    float q4 = fbm(p - time * 1.4 - 20.0*sin(time)/14.0)+2.0;
    q = (q + qb - .4 * q2 -2.0*q3  + .6*q4)/3.8;
    vec2 r = vec2(fbm(p + q /2.0 + time * speed.x - p.x - p.y), fbm(p + q - time * speed.y));
    vec3 c = mix(c1, c2, fbm(p + r)) + mix(c3, c4, r.x) - mix(c5, c6, r.y);
    vec3 color = vec3(1.0/(pow(c+1.61,vec3(4.0))) * cos(shift * fragCoord.y / iResolution.y));
    
    color=vec3(1.0,.2,.05)/(pow((r.y+r.y)* max(.0,p.y)+0.1, 4.0));
    //color += (texture(iChannel0,uv*0.6+vec2(.5,.1)).xyz*0.01*pow((r.y+r.y)*.65,5.0)+0.055)*mix( vec3(.9,.4,.3),vec3(.7,.5,.2), uv.y);
    color = color/(1.0+max(vec3(0),color));
    fragColor = vec4(color.x, color.y, color.z, alpha);
}

void fragment(){
	vec4 color = texture(TEXTURE, UV);
	vec4 fire_color;
	vec2 texture_pixel_size = TEXTURE_PIXEL_SIZE * vec2(1, height_multiplier);
	render(fire_color, texture_pixel_size, UV / texture_pixel_size, TIME);
	COLOR = color * fire_color;
}"

[sub_resource type="ShaderMaterial" id=13]
shader = SubResource( 12 )
shader_param/height_multiplier = 0.7

[sub_resource type="DynamicFont" id=14]
size = 64
outline_color = Color( 0, 0, 0, 1 )
use_filter = true
font_data = SubResource( 10 )

[node name="DraftScene" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Tween" type="Tween" parent="."]

[node name="NodePathTracker" type="Node" parent="."]
script = ExtResource( 2 )
nodepaths = [ NodePath("../ChoiceView"), NodePath("../OptionsView"), NodePath("../ResultsView"), NodePath("../Background/WormHoleEffect") ]

[node name="Background" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="WormHoleEffect" type="ColorRect" parent="Background"]
material = ExtResource( 8 )
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 9 )
__meta__ = {
"_edit_use_anchors_": false
}
time_multiplier = 0.0

[node name="AnimationPlayer" type="AnimationPlayer" parent="Background/WormHoleEffect"]
anims/default = SubResource( 1 )
anims/intro = SubResource( 2 )
anims/level_1 = SubResource( 3 )
anims/level_2 = SubResource( 4 )
anims/level_3 = SubResource( 5 )
anims/results = SubResource( 6 )

[node name="Gradient" type="TextureRect" parent="Background"]
modulate = Color( 1, 1, 1, 0.733333 )
margin_left = 949.559
margin_top = -6.04871
margin_right = 1656.56
margin_bottom = 1098.95
rect_rotation = 90.0
texture = SubResource( 8 )
expand = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="IntroLabels" type="Control" parent="Background"]
modulate = Color( 1, 1, 1, 0 )
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="RankedDraftInLabel" type="Label" parent="Background/IntroLabels"]
anchor_left = 0.5
anchor_right = 0.5
margin_left = -166.881
margin_top = 8.59418
margin_right = 119.119
margin_bottom = 57.5942
rect_scale = Vector2( 1.1, 1.3 )
custom_fonts/font = SubResource( 9 )
custom_colors/font_color = Color( 1, 1, 1, 1 )
text = "Ranked Draft in"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="LabelCounting" type="Label" parent="Background/IntroLabels"]
modulate = Color( 1, 1, 1, 0 )
anchor_left = 0.5
anchor_right = 0.5
margin_left = 0.511993
margin_top = 80.8866
margin_right = 38.512
margin_bottom = 129.887
rect_scale = Vector2( 2, 2 )
custom_fonts/font = SubResource( 9 )
custom_colors/font_color = Color( 1, 1, 1, 1 )
text = "3"
align = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="LabelGo" type="Label" parent="Background/IntroLabels"]
modulate = Color( 1, 1, 1, 0 )
anchor_left = 0.5
anchor_right = 0.5
margin_left = -221.332
margin_top = 231.867
margin_right = -1.33154
margin_bottom = 308.867
rect_scale = Vector2( 2, 2 )
custom_fonts/font = SubResource( 11 )
custom_colors/font_color = Color( 0, 0, 0, 1 )
text = "GO!"
align = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="LabelGo" type="Label" parent="Background/IntroLabels/LabelGo"]
material = SubResource( 13 )
anchor_left = 0.5
anchor_right = 0.5
margin_left = -110.0
margin_right = 110.0
margin_bottom = 39.0
custom_fonts/font = SubResource( 14 )
custom_colors/font_color = Color( 1, 1, 1, 1 )
text = "GO!"
align = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ResultsBackground" type="ColorRect" parent="Background"]
modulate = Color( 1, 1, 1, 0 )
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="OptionsView" parent="." instance=ExtResource( 3 )]

[node name="ChoiceView" parent="." instance=ExtResource( 4 )]
visible = false

[node name="ResultsView" parent="." instance=ExtResource( 5 )]
visible = false
